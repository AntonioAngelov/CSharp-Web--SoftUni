// <auto-generated />
using _04.BankSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace _04.BankSystem.Migrations
{
    [DbContext(typeof(BankSystemDbContext))]
    partial class BankSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_04.BankSystem.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account Type")
                        .IsRequired();

                    b.Property<string>("AccountNumber");

                    b.Property<decimal>("Balance");

                    b.Property<int>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<string>("Account Type").HasValue("Account");
                });

            modelBuilder.Entity("_04.BankSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_04.BankSystem.Models.CheckingAccount", b =>
                {
                    b.HasBaseType("_04.BankSystem.Models.Account");

                    b.Property<decimal>("Fee");

                    b.ToTable("CheckingAccount");

                    b.HasDiscriminator().HasValue("CheckingAccount");
                });

            modelBuilder.Entity("_04.BankSystem.Models.SavingAccount", b =>
                {
                    b.HasBaseType("_04.BankSystem.Models.Account");

                    b.Property<double>("InterestRate");

                    b.ToTable("SavingAccount");

                    b.HasDiscriminator().HasValue("SavingAccount");
                });

            modelBuilder.Entity("_04.BankSystem.Models.Account", b =>
                {
                    b.HasOne("_04.BankSystem.Models.User", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
